{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoshi\\\\OneDrive\\\\Desktop\\\\agoraphobicdash\\\\client\\\\src\\\\components\\\\repoTracker\\\\repoLanguageDisp.js\",\n    _s = $RefreshSig$();\n\nimport { ProgressBar } from \"react-bootstrap\";\nimport '../../styles/components/repotracker/repolang.scss';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RepoLang() {\n  _s();\n\n  const [dispState, setDispState] = useState();\n  const [gitdata, setGitData] = useState([]);\n  const [contents, setContents] = useState([]);\n\n  async function getGitData() {\n    const data = await fetch('/gitdata', {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      return data;\n    });\n    let dataArr = [];\n    data.map(repo => {\n      dataArr.push(repo.name);\n    });\n    setGitData(dataArr);\n  }\n\n  useEffect(() => {\n    getGitData();\n  }, []);\n\n  function progBars() {\n    let contentsArr = [];\n    gitdata.forEach(async reponame => {\n      await fetch(`https://api.github.com/repos/jaredreyes039/${reponame}/languages`).then(res => res.json()).then(data => {\n        contentsArr.push(data);\n        console.log(contentsArr);\n        let display = contentsArr.map((arr, idx) => {\n          let colors = ['green', 'red', 'yellow', 'purple', 'teal'];\n          let sumArr = [];\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"lang-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: gitdata[idx].toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this), Object.keys(arr).map((key, i) => {\n                sumArr.push(arr[key]);\n                const getSum = sumArr.reduce((prev, curr) => {\n                  const sum = prev + curr;\n                  return sum;\n                }, sumArr[0]);\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"prog\",\n                    children: key\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 46\n                  }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                    label: arr[key],\n                    name: \"prog\",\n                    style: {\n                      borderRadius: '16px',\n                      width: '100%',\n                      marginBottom: '2.5%'\n                    },\n                    variant: colors[i],\n                    animated: true,\n                    now: arr[key],\n                    max: getSum\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 46\n                  }, this)]\n                }, void 0, true);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false);\n        });\n        setDispState(display);\n      });\n    });\n  }\n\n  useEffect(() => {\n    progBars();\n  }, [gitdata]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repolang-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Language Composition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A breakdown of each repo's language composition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), dispState || /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"error-msg\",\n        children: [\"ERROR: Failed to load Github Repo Language Composition. Perhaps the personal token has expired? Access\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.github.com/\",\n          children: \" Github Dev Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), \" for more information.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(RepoLang, \"i/P5uB/as6oQTaczpE8b+PHCQDg=\");\n\n_c = RepoLang;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepoLang\");","map":{"version":3,"names":["ProgressBar","useState","useEffect","RepoLang","dispState","setDispState","gitdata","setGitData","contents","setContents","getGitData","data","fetch","method","then","res","json","dataArr","map","repo","push","name","progBars","contentsArr","forEach","reponame","console","log","display","arr","idx","colors","sumArr","toUpperCase","Object","keys","key","i","getSum","reduce","prev","curr","sum","borderRadius","width","marginBottom"],"sources":["C:/Users/yoshi/OneDrive/Desktop/agoraphobicdash/client/src/components/repoTracker/repoLanguageDisp.js"],"sourcesContent":["import { ProgressBar } from \"react-bootstrap\"\r\nimport '../../styles/components/repotracker/repolang.scss'\r\nimport { useState, useEffect } from \"react\"\r\n\r\nexport default function RepoLang(){\r\n    const [dispState, setDispState] = useState()\r\n\r\n    const [gitdata, setGitData] = useState([])\r\n    const [contents, setContents] = useState([])\r\n\r\n        async function getGitData(){\r\n            const data = await fetch('/gitdata', {\r\n                method: 'GET',\r\n            }).then(res=> res.json()).then(data => {return(data)})\r\n            let dataArr = []\r\n            data.map((repo)=>{\r\n             dataArr.push(repo.name)\r\n            })\r\n            setGitData(dataArr)\r\n        }\r\n\r\n         useEffect(()=>{\r\n            getGitData()\r\n           }, [])\r\n          \r\n           function progBars(){\r\n            let contentsArr = []\r\n            gitdata.forEach( async (reponame)=>{\r\n                 await fetch(`https://api.github.com/repos/jaredreyes039/${reponame}/languages`)\r\n                    .then(res=>res.json())\r\n                    .then(data=> {\r\n                        contentsArr.push(data)\r\n\r\n                        console.log(contentsArr)\r\n                        let display = contentsArr.map((arr, idx)=>{\r\n                            let colors = ['green', 'red', 'yellow', 'purple', 'teal']\r\n                            let sumArr = []\r\n\r\n                            return(\r\n                             <>\r\n                                <ul className = \"lang-list\">\r\n                                    <h3>{gitdata[idx].toUpperCase()}</h3>\r\n                                    {\r\n                                     Object.keys(arr).map((key, i)=>{\r\n                                         sumArr.push(arr[key])\r\n                                         const getSum = sumArr.reduce((prev, curr)=>{\r\n                                             const sum = prev + curr\r\n                                             return sum\r\n                                         }, sumArr[0])\r\n\r\n                                         return(\r\n                                             <>\r\n                                             <label for = 'prog'>{key}</label>\r\n                                             <ProgressBar label = {arr[key]}  name = 'prog' style={{borderRadius: '16px' ,width: '100%', marginBottom: '2.5%'}} variant= {colors[i]} animated now={(arr[key])} max = {getSum} />\r\n                                             </>\r\n                                         )\r\n                                     })\r\n                                    }\r\n                                </ul>\r\n                                </>\r\n                            )\r\n                        })\r\n                        setDispState(display)\r\n                       } \r\n                       )\r\n            })\r\n        }\r\n\r\n           useEffect(()=>{\r\n           progBars()\r\n       }, [gitdata])\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"repolang-container\">\r\n            <h2>Language Composition</h2>\r\n            <p>A breakdown of each repo's language composition</p>\r\n             {dispState ||  <h4 className = 'error-msg'>ERROR: Failed to load Github Repo Language Composition. Perhaps\r\n                    the personal token has expired? Access \r\n                    <a href = 'https://www.github.com/'> Github Dev Settings</a> for more information.\r\n                </h4>}\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}