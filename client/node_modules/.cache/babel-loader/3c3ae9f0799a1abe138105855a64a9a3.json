{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoshi\\\\OneDrive\\\\Desktop\\\\agoraphobicdash\\\\client\\\\src\\\\components\\\\repoTracker\\\\repoFileDisp.js\",\n    _s = $RefreshSig$();\n\nimport '../../styles/components/repotracker/repofiledisp.scss';\nimport { useState, useEffect, useRef, useMemo } from 'react';\nimport { RadialBar, ResponsiveRadialBar } from '@nivo/radial-bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RepoFileDisp() {\n  _s();\n\n  const [gitdata, setGitData] = useState([]);\n  const [contents, setContents] = useState([]);\n\n  async function fetchgit() {\n    const data = await fetch('/gitdata', {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      return data;\n    });\n    let dataArr = [];\n    data.map(repo => {\n      dataArr.push(repo.name);\n    });\n    setGitData(dataArr);\n  }\n\n  useEffect(() => {\n    fetchgit();\n  }, []);\n\n  async function fetchContents() {\n    let contentsArr = [];\n    gitdata.forEach(async reponame => {\n      const data = await fetch(`https://api.github.com/repos/jaredreyes039/${reponame}/contents`).then(res => res.json()).then(data => {\n        contentsArr.push(data);\n        contentsArr.map((arr, i) => {\n          arr.sort((a, b) => {\n            let nameA = a.name.toUpperCase();\n            let nameB = b.name.toUpperCase();\n\n            if (nameA < nameB) {\n              return -1;\n            }\n\n            if (nameA > nameB) {\n              return 1;\n            } else {\n              return 0;\n            }\n          });\n        });\n        let display = \"\";\n\n        if (gitdata.length > 0) {\n          display = contentsArr.map((arr, idx) => {\n            let color = 'white';\n            return /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"file-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: gitdata[idx].toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), arr.map((file, idx) => {\n                if (file.name.includes('.md') || file.name.includes('.txt') || file.name.includes('.pdf')) {\n                  color = '#e281aa';\n                } else if (file.name.includes('.html')) {\n                  color = '#aee6d3';\n                } else if (file.name.includes('.js' || '.json')) {\n                  color = '#f1e587';\n                } else if (file.name.includes('.svg') || file.name.includes('.glb')) {\n                  color = '#9de2ef';\n                } else if (file.name.includes('.css') || file.name.includes('.scss')) {\n                  color = '#c395e0';\n                } else {\n                  color = 'white';\n                }\n\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      style: {\n                        backgroundColor: color\n                      },\n                      href: file.download_url,\n                      children: file.name.toUpperCase()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Type:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 53\n                    }, this), \" \", file.type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Size:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 53\n                    }, this), \" \", file.size + 'kb']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this);\n          });\n          setDispState(display);\n        } else {\n          display = /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"error-msg\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://www.github.com/\",\n              children: \" Github Dev Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), \" for more information.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 39\n          }, this);\n          setDispState(display);\n        }\n      });\n    });\n  }\n\n  const [dispState, setDispState] = useState();\n  useEffect(() => {\n    fetchContents();\n  }, [gitdata]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repofile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Repo File Contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a file to download/view its contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), dispState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(RepoFileDisp, \"eHKVebV4qPXJzidwfwDQo+6FxqA=\");\n\n_c = RepoFileDisp;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepoFileDisp\");","map":{"version":3,"names":["useState","useEffect","useRef","useMemo","RadialBar","ResponsiveRadialBar","RepoFileDisp","gitdata","setGitData","contents","setContents","fetchgit","data","fetch","method","then","res","json","dataArr","map","repo","push","name","fetchContents","contentsArr","forEach","reponame","arr","i","sort","a","b","nameA","toUpperCase","nameB","display","length","idx","color","file","includes","backgroundColor","download_url","type","size","setDispState","dispState"],"sources":["C:/Users/yoshi/OneDrive/Desktop/agoraphobicdash/client/src/components/repoTracker/repoFileDisp.js"],"sourcesContent":["import '../../styles/components/repotracker/repofiledisp.scss'\r\nimport { useState, useEffect, useRef, useMemo } from 'react'\r\nimport {RadialBar, ResponsiveRadialBar} from '@nivo/radial-bar'\r\n\r\nexport default function RepoFileDisp(){\r\n    const [gitdata, setGitData] = useState([])\r\n    const [contents, setContents] = useState([])\r\n    async function fetchgit(){\r\n        const data = await fetch('/gitdata', {\r\n          method: 'GET',\r\n      }).then(res=> res.json()).then(data => {return(data)})\r\n      let dataArr = []\r\n      data.map((repo)=>{\r\n       dataArr.push(repo.name)\r\n      })\r\n      setGitData(dataArr)\r\n   }\r\n         useEffect(()=>{\r\n            fetchgit()\r\n           }, [])\r\n\r\n\r\n           async function fetchContents(){\r\n            let contentsArr = []\r\n            gitdata.forEach(async (reponame)=>{\r\n                 const data = await fetch(`https://api.github.com/repos/jaredreyes039/${reponame}/contents`)\r\n                    .then(res=>res.json())\r\n                    .then(data=> {\r\n                        contentsArr.push(data)\r\n                        contentsArr.map((arr, i) =>{\r\n                            arr.sort((a,b)=>{\r\n                                let nameA = a.name.toUpperCase();\r\n                                let nameB = b.name.toUpperCase()\r\n                                if(nameA<nameB){\r\n                                    return -1;\r\n                                }\r\n                                if(nameA>nameB){\r\n                                    return 1;\r\n                                }\r\n                                else{\r\n                                    return 0;\r\n                                }\r\n                            })\r\n                        })\r\n                        let display = \"\"\r\n                        if(gitdata.length > 0){\r\n                             display = contentsArr.map((arr, idx)=>{\r\n                            let color = 'white';\r\n                            return(\r\n                                <ul className = \"file-list\">\r\n                                    <h3>{gitdata[idx].toUpperCase()}</h3>\r\n                                    {\r\n                                    arr.map((file, idx)=>{\r\n                                       if(file.name.includes( '.md') || file.name.includes('.txt') || file.name.includes('.pdf')){\r\n                                        color = '#e281aa'\r\n                                       }\r\n                                       else if(file.name.includes('.html')){\r\n                                        color = '#aee6d3'\r\n                                       }\r\n                                       else if(file.name.includes('.js' || '.json')){\r\n                                        color = '#f1e587'\r\n                                       }\r\n                                       else if(file.name.includes('.svg') || file.name.includes('.glb')){\r\n                                        color = '#9de2ef'\r\n                                       }\r\n                                       else if(file.name.includes('.css')|| file.name.includes('.scss')){\r\n                                        color = '#c395e0'\r\n                                       }\r\n                                       else{\r\n                                        color = 'white'\r\n                                       }\r\n                                        return (\r\n                                            <>\r\n                                                <li><a style={{backgroundColor: color}} href = {file.download_url}>{file.name.toUpperCase()}</a></li>\r\n                                                <li><span>Type:</span> {file.type}</li>\r\n                                                <li><span>Size:</span> {file.size + 'kb'}</li>\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n                            )\r\n                        })\r\n                        setDispState(display)\r\n                        } else{\r\n                            display = <h5 className=\"error-msg\">\r\n                                <a href = 'https://www.github.com/'> Github Dev Settings</a> for more information.\r\n                            </h5>\r\n                            setDispState(display)\r\n                        }} \r\n                       )\r\n            })\r\n        }\r\n           const [dispState, setDispState] = useState()\r\n           useEffect(()=>{\r\n                fetchContents()\r\n            }, [gitdata])\r\n\r\n\r\n\r\n     return(\r\n        <>\r\n            <div className=\"repofile-container\">\r\n                <h2>Repo File Contents</h2>\r\n                <p>Select a file to download/view its contents</p>\r\n                {dispState}\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}