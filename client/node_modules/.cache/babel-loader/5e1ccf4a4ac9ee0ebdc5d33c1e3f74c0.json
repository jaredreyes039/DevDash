{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoshi\\\\OneDrive\\\\Desktop\\\\agoraphobicdash\\\\client\\\\src\\\\components\\\\mongoTracker\\\\mongoTrackContainer.js\",\n    _s = $RefreshSig$();\n\nimport '../../styles/components/mongotracker/mongotrackcontainer.scss';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MongoTrackerContainer() {\n  _s();\n\n  const [stackdata, setStackData] = useState({\n    items: []\n  });\n\n  async function fetchStack() {\n    const data = await fetch('', {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      return data;\n    });\n    setStackData(data);\n  }\n\n  useEffect(() => {\n    fetchStack();\n  }, []);\n\n  const stackDisp = () => {\n    if (stackdata.items.length > 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: stackdata.items.map(question => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"questions-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: question.link,\n                  children: question.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"question-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Answers: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 45\n                  }, this), question.answer_count]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"tags\",\n                  children: question.tags.map(tag => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: tag\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 34,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Owner: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 45\n                  }, this), question.owner.display_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"error-msg\",\n          children: [\"ERROR: Failed to load StackExchange Module, perhaps the request limit has been reached? Access the\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://api.stackexchange.com/docs\",\n            children: \"StackExchange API docs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), \" for more information.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mongotrack-container\",\n      children: stackDisp()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n} // https://api.stackexchange.com/2.3/questions?site=stackoverflow&tagged=reactjs&pagesize=5\n\n_s(MongoTrackerContainer, \"NMmebewkjUY3rZxu0dI/u9f1Q3c=\");\n\n_c = MongoTrackerContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MongoTrackerContainer\");","map":{"version":3,"names":["useState","useEffect","MongoTrackerContainer","stackdata","setStackData","items","fetchStack","data","fetch","method","then","res","json","stackDisp","length","map","question","link","title","answer_count","tags","tag","owner","display_name"],"sources":["C:/Users/yoshi/OneDrive/Desktop/agoraphobicdash/client/src/components/mongoTracker/mongoTrackContainer.js"],"sourcesContent":["import '../../styles/components/mongotracker/mongotrackcontainer.scss'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\n\r\nexport default function MongoTrackerContainer(){\r\n\r\n    const [stackdata, setStackData] = useState({items: []})\r\n    async function fetchStack(){\r\n        const data = await fetch('', {\r\n          method: 'GET',\r\n      }).then(res=> res.json()).then(data => {return(data)})\r\n      setStackData(data)\r\n   }\r\n\r\n    useEffect(()=>{\r\n       fetchStack()\r\n      }, [])\r\n\r\n      const stackDisp = () => {\r\n        if(stackdata.items.length > 0){\r\n            return(\r\n                <>\r\n                        {stackdata.items.map((question)=>{\r\n                            return(\r\n                                <>\r\n                                <div className=\"questions-container\">\r\n                                    <h5><a href = {question.link}>{question.title}</a></h5>\r\n                                    <ul className='question-info'>\r\n                                        <li><span>Answers: </span>{question.answer_count}</li>\r\n                                        <ul className='tags'>\r\n                                            {question.tags.map((tag)=>{\r\n                                                return(\r\n                                                    <>\r\n                                                        <li>{tag}</li>\r\n                                                    </>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                        <li><span>Owner: </span>{question.owner.display_name}</li>\r\n                                    </ul>\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                        })}\r\n                </>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                    <h4 className = 'error-msg'>ERROR: Failed to load StackExchange Module, perhaps\r\n                    the request limit has been reached? Access the\r\n                    <a href = 'https://api.stackexchange.com/docs'>StackExchange API docs</a> for more information.\r\n                </h4>\r\n                </>\r\n            )\r\n        }\r\n      }\r\n    return(\r\n        <>\r\n            <div className=\"mongotrack-container\">\r\n                {stackDisp()}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n// https://api.stackexchange.com/2.3/questions?site=stackoverflow&tagged=reactjs&pagesize=5"],"mappings":";;;AAAA,OAAO,+DAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,eAAe,SAASC,qBAAT,GAAgC;EAAA;;EAE3C,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC;IAACK,KAAK,EAAE;EAAR,CAAD,CAA1C;;EACA,eAAeC,UAAf,GAA2B;IACvB,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,EAAD,EAAK;MAC3BC,MAAM,EAAE;IADmB,CAAL,CAAL,CAElBC,IAFkB,CAEbC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EAFO,EAEKF,IAFL,CAEUH,IAAI,IAAI;MAAC,OAAOA,IAAP;IAAa,CAFhC,CAAnB;IAGFH,YAAY,CAACG,IAAD,CAAZ;EACF;;EAEAN,SAAS,CAAC,MAAI;IACXK,UAAU;EACV,CAFM,EAEJ,EAFI,CAAT;;EAIE,MAAMO,SAAS,GAAG,MAAM;IACtB,IAAGV,SAAS,CAACE,KAAV,CAAgBS,MAAhB,GAAyB,CAA5B,EAA8B;MAC1B,oBACI;QAAA,UACSX,SAAS,CAACE,KAAV,CAAgBU,GAAhB,CAAqBC,QAAD,IAAY;UAC7B,oBACI;YAAA,uBACA;cAAK,SAAS,EAAC,qBAAf;cAAA,wBACI;gBAAA,uBAAI;kBAAG,IAAI,EAAIA,QAAQ,CAACC,IAApB;kBAAA,UAA2BD,QAAQ,CAACE;gBAApC;kBAAA;kBAAA;kBAAA;gBAAA;cAAJ;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAI,SAAS,EAAC,eAAd;gBAAA,wBACI;kBAAA,wBAAI;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAJ,EAA2BF,QAAQ,CAACG,YAApC;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,eAEI;kBAAI,SAAS,EAAC,MAAd;kBAAA,UACKH,QAAQ,CAACI,IAAT,CAAcL,GAAd,CAAmBM,GAAD,IAAO;oBACtB,oBACI;sBAAA,uBACI;wBAAA,UAAKA;sBAAL;wBAAA;wBAAA;wBAAA;sBAAA;oBADJ,iBADJ;kBAKH,CANA;gBADL;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ,eAWI;kBAAA,wBAAI;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAJ,EAAyBL,QAAQ,CAACM,KAAT,CAAeC,YAAxC;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAXJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADA,iBADJ;QAoBH,CArBA;MADT,iBADJ;IA0BH,CA3BD,MA4BI;MACA,oBACI;QAAA,uBACI;UAAI,SAAS,EAAG,WAAhB;UAAA,8HAEA;YAAG,IAAI,EAAG,oCAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ,iBADJ;IAQH;EACF,CAvCD;;EAwCF,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,sBAAf;MAAA,UACKV,SAAS;IADd;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAOH,C,CACD;;GA9DwBX,qB;;KAAAA,qB"},"metadata":{},"sourceType":"module"}