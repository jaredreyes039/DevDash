{"ast":null,"code":"import { BasicTooltip as e, useTooltip as r } from \"@nivo/tooltip\";\nimport { jsx as a, jsxs as n } from \"react/jsx-runtime\";\nimport { useMemo as i, useCallback as o, createElement as t, Fragment as l } from \"react\";\nimport { degreesToRadians as d, useValueFormatter as s, Container as u, useDimensions as c, clampArc as g, SvgWrapper as v, ResponsiveWrapper as p } from \"@nivo/core\";\nimport { ArcsLayer as f, ArcLabelsLayer as b } from \"@nivo/arcs\";\nimport { BoxLegendSvg as m } from \"@nivo/legends\";\nimport { PolarGrid as h, RadialAxis as A, CircularAxis as R } from \"@nivo/polar-axes\";\nimport { scaleLinear as x, scaleBand as M } from \"d3-scale\";\nimport { arc as C } from \"d3-shape\";\nimport { useOrdinalColorScale as k } from \"@nivo/colors\";\nimport { castLinearScale as y, castBandScale as I, getScaleTicks as G } from \"@nivo/scales\";\n\nfunction S() {\n  return S = Object.assign || function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var a = arguments[r];\n\n      for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);\n    }\n\n    return e;\n  }, S.apply(this, arguments);\n}\n\nvar W = {\n  maxValue: \"auto\",\n  layers: [\"grid\", \"tracks\", \"bars\", \"labels\", \"legends\"],\n  startAngle: 0,\n  endAngle: 270,\n  innerRadius: .3,\n  padding: .2,\n  padAngle: 0,\n  cornerRadius: 0,\n  enableTracks: !0,\n  tracksColor: \"rgba(0, 0, 0, .15)\",\n  enableRadialGrid: !0,\n  enableCircularGrid: !0,\n  radialAxisStart: {},\n  radialAxisEnd: null,\n  circularAxisInner: null,\n  circularAxisOuter: {},\n  colors: {\n    scheme: \"nivo\"\n  },\n  borderWidth: 0,\n  borderColor: {\n    from: \"color\",\n    modifiers: [[\"darker\", 1]]\n  },\n  enableLabels: !1,\n  label: \"formattedValue\",\n  labelsSkipAngle: 10,\n  labelsRadiusOffset: .5,\n  labelsTextColor: {\n    theme: \"labels.text.fill\"\n  },\n  isInteractive: !0,\n  tooltip: function (r) {\n    var i = r.bar;\n    return a(e, {\n      enableChip: !0,\n      id: n(\"span\", {\n        children: [i.category, \" - \", i.groupId]\n      }),\n      value: i.formattedValue,\n      color: i.color\n    });\n  },\n  legends: [],\n  animate: !0,\n  motionConfig: \"gentle\",\n  transitionMode: \"centerRadius\",\n  renderWrapper: !0\n},\n    L = S({}, W),\n    V = function (e) {\n  var n = e.center,\n      i = e.bars,\n      l = e.borderWidth,\n      d = e.borderColor,\n      s = e.arcGenerator,\n      u = e.isInteractive,\n      c = e.tooltip,\n      g = e.onClick,\n      v = e.onMouseEnter,\n      p = e.onMouseMove,\n      b = e.onMouseLeave,\n      m = e.transitionMode,\n      h = r(),\n      A = h.showTooltipFromEvent,\n      R = h.hideTooltip,\n      x = o(function (e, r) {\n    null == g || g(e, r);\n  }, [g]),\n      M = o(function (e, r) {\n    A(t(c, {\n      bar: e\n    }), r), null == v || v(e, r);\n  }, [A, c, v]),\n      C = o(function (e, r) {\n    A(t(c, {\n      bar: e\n    }), r), null == p || p(e, r);\n  }, [A, c, p]),\n      k = o(function (e, r) {\n    R(), null == b || b(e, r);\n  }, [R, b]);\n  return a(f, {\n    center: n,\n    data: i,\n    arcGenerator: s,\n    borderWidth: l,\n    borderColor: d,\n    transitionMode: m,\n    onClick: u ? x : void 0,\n    onMouseEnter: u ? M : void 0,\n    onMouseMove: u ? C : void 0,\n    onMouseLeave: u ? k : void 0\n  });\n},\n    E = function (e) {\n  var r = e.center,\n      n = e.tracks,\n      i = e.arcGenerator,\n      o = e.transitionMode;\n  return a(f, {\n    center: r,\n    data: n,\n    arcGenerator: i,\n    borderWidth: 0,\n    borderColor: \"none\",\n    transitionMode: o\n  });\n},\n    O = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n    w = function (e) {\n  var r = e.data,\n      o = e.maxValue,\n      u = void 0 === o ? L.maxValue : o,\n      p = e.valueFormat,\n      f = e.startAngle,\n      O = void 0 === f ? L.startAngle : f,\n      w = e.endAngle,\n      T = void 0 === w ? L.endAngle : w,\n      j = e.innerRadius,\n      B = void 0 === j ? L.innerRadius : j,\n      D = e.padding,\n      F = void 0 === D ? L.padding : D,\n      H = e.padAngle,\n      P = void 0 === H ? L.padAngle : H,\n      q = e.cornerRadius,\n      z = void 0 === q ? L.cornerRadius : q,\n      J = e.width,\n      K = e.height,\n      N = e.margin,\n      Q = e.layers,\n      U = void 0 === Q ? L.layers : Q,\n      X = e.enableTracks,\n      Y = void 0 === X ? L.enableTracks : X,\n      Z = e.tracksColor,\n      $ = void 0 === Z ? L.tracksColor : Z,\n      _ = e.enableRadialGrid,\n      ee = void 0 === _ ? L.enableRadialGrid : _,\n      re = e.enableCircularGrid,\n      ae = void 0 === re ? L.enableCircularGrid : re,\n      ne = e.radialAxisStart,\n      ie = void 0 === ne ? L.radialAxisStart : ne,\n      oe = e.radialAxisEnd,\n      te = void 0 === oe ? L.radialAxisEnd : oe,\n      le = e.circularAxisInner,\n      de = void 0 === le ? L.circularAxisInner : le,\n      se = e.circularAxisOuter,\n      ue = void 0 === se ? L.circularAxisOuter : se,\n      ce = e.colors,\n      ge = void 0 === ce ? L.colors : ce,\n      ve = e.borderWidth,\n      pe = void 0 === ve ? L.borderWidth : ve,\n      fe = e.borderColor,\n      be = void 0 === fe ? L.borderColor : fe,\n      me = e.enableLabels,\n      he = void 0 === me ? L.enableLabels : me,\n      Ae = e.label,\n      Re = void 0 === Ae ? L.label : Ae,\n      xe = e.labelsSkipAngle,\n      Me = void 0 === xe ? L.labelsSkipAngle : xe,\n      Ce = e.labelsRadiusOffset,\n      ke = void 0 === Ce ? L.labelsRadiusOffset : Ce,\n      ye = e.labelsTextColor,\n      Ie = void 0 === ye ? L.labelsTextColor : ye,\n      Ge = e.isInteractive,\n      Se = void 0 === Ge ? L.isInteractive : Ge,\n      We = e.tooltip,\n      Le = void 0 === We ? L.tooltip : We,\n      Ve = e.onClick,\n      Ee = e.onMouseEnter,\n      Oe = e.onMouseMove,\n      we = e.onMouseLeave,\n      Te = e.transitionMode,\n      je = void 0 === Te ? L.transitionMode : Te,\n      Be = e.legends,\n      De = void 0 === Be ? L.legends : Be,\n      Fe = e.role,\n      He = e.ariaLabel,\n      Pe = e.ariaLabelledBy,\n      qe = e.ariaDescribedBy,\n      ze = c(J, K, N),\n      Je = ze.margin,\n      Ke = ze.innerWidth,\n      Ne = ze.innerHeight,\n      Qe = ze.outerWidth,\n      Ue = ze.outerHeight,\n      Xe = g(O, T),\n      Ye = Xe[0],\n      Ze = Xe[1],\n      $e = function (e) {\n    var r = e.data,\n        a = e.maxValue,\n        n = void 0 === a ? L.maxValue : a,\n        o = e.valueFormat,\n        t = e.startAngle,\n        l = void 0 === t ? W.startAngle : t,\n        u = e.endAngle,\n        c = void 0 === u ? W.endAngle : u,\n        g = e.innerRadiusRatio,\n        v = void 0 === g ? W.innerRadius : g,\n        p = e.padding,\n        f = void 0 === p ? W.padding : p,\n        b = e.padAngle,\n        m = void 0 === b ? W.padAngle : b,\n        h = e.cornerRadius,\n        A = void 0 === h ? W.cornerRadius : h,\n        R = e.width,\n        S = e.height,\n        V = e.colors,\n        E = void 0 === V ? W.colors : V,\n        O = e.tracksColor,\n        w = void 0 === O ? W.tracksColor : O,\n        T = i(function () {\n      return [R / 2, S / 2];\n    }, [R, S]),\n        j = Math.min.apply(Math, T),\n        B = j * Math.min(v, 1),\n        D = k(E, \"category\"),\n        F = i(function () {\n      var e = {\n        serieIds: [],\n        categories: [],\n        groups: [],\n        maxValue: 0\n      };\n      return r.forEach(function (r) {\n        e.serieIds.push(r.id);\n        var a = 0;\n        r.data.forEach(function (r) {\n          e.categories.includes(r.x) || e.categories.push(r.x), a += r.y;\n        }), e.groups.push({\n          id: r.id,\n          total: a,\n          data: r.data\n        });\n      }), e.maxValue = \"auto\" === n ? Math.max.apply(Math, e.groups.map(function (e) {\n        return e.total;\n      })) : n, e;\n    }, [r, n]),\n        H = F.serieIds,\n        P = F.categories,\n        q = F.groups,\n        z = F.maxValue,\n        J = i(function () {\n      return y(x().domain([0, z]).range([l, c]));\n    }, [z, l, c]),\n        K = i(function () {\n      return I(M().domain(H).range([B, j]).padding(f));\n    }, [H, j, B, f]),\n        N = i(function () {\n      return C().startAngle(function (e) {\n        return e.startAngle;\n      }).endAngle(function (e) {\n        return e.endAngle;\n      }).innerRadius(function (e) {\n        return e.innerRadius;\n      }).outerRadius(function (e) {\n        return e.outerRadius;\n      }).cornerRadius(A).padAngle(d(m));\n    }, [A, m]),\n        Q = s(o),\n        U = i(function () {\n      var e = [];\n      return q.forEach(function (r) {\n        var a = 0,\n            n = K(r.id),\n            i = n + K.bandwidth();\n        r.data.forEach(function (o) {\n          var t = a + o.y,\n              l = {\n            id: r.id + \".\" + o.x,\n            data: o,\n            groupId: r.id,\n            category: o.x,\n            value: o.y,\n            formattedValue: Q(o.y),\n            color: \"\",\n            stackedValue: t,\n            arc: {\n              startAngle: d(J(a)),\n              endAngle: d(J(t)),\n              innerRadius: n,\n              outerRadius: i\n            }\n          };\n          l.color = D(l), a += o.y, e.push(l);\n        });\n      }), e;\n    }, [q, K, J, D, Q]),\n        X = d(l),\n        Y = d(c),\n        Z = i(function () {\n      return G(K).map(function (e) {\n        var r = K(e);\n        return {\n          id: e,\n          color: w,\n          arc: {\n            startAngle: X,\n            endAngle: Y,\n            innerRadius: r,\n            outerRadius: r + K.bandwidth()\n          }\n        };\n      });\n    }, [K, X, Y, w]),\n        $ = i(function () {\n      return P.map(function (e) {\n        var r = U.find(function (r) {\n          return r.category === e;\n        }),\n            a = r ? r.color : void 0;\n        return {\n          id: e,\n          label: e,\n          color: a\n        };\n      });\n    }, [P, U]),\n        _ = i(function () {\n      return {\n        center: T,\n        outerRadius: j,\n        innerRadius: B,\n        bars: U,\n        arcGenerator: N,\n        radiusScale: K,\n        valueScale: J\n      };\n    }, [T, j, B, U, N, K, J]);\n\n    return {\n      center: T,\n      outerRadius: j,\n      innerRadius: B,\n      bars: U,\n      arcGenerator: N,\n      radiusScale: K,\n      valueScale: J,\n      tracks: Z,\n      legendData: $,\n      customLayerProps: _\n    };\n  }({\n    data: r,\n    maxValue: u,\n    valueFormat: p,\n    startAngle: Ye,\n    endAngle: Ze,\n    innerRadiusRatio: B,\n    padding: F,\n    padAngle: P,\n    cornerRadius: z,\n    width: Ke,\n    height: Ne,\n    colors: ge,\n    tracksColor: $\n  }),\n      _e = $e.center,\n      er = $e.innerRadius,\n      rr = $e.outerRadius,\n      ar = $e.bars,\n      nr = $e.arcGenerator,\n      ir = $e.radiusScale,\n      or = $e.valueScale,\n      tr = $e.tracks,\n      lr = $e.legendData,\n      dr = $e.customLayerProps,\n      sr = {\n    grid: null,\n    tracks: null,\n    bars: null,\n    labels: null,\n    legends: null\n  };\n\n  return U.includes(\"grid\") && (sr.grid = n(l, {\n    children: [a(h, {\n      center: _e,\n      enableRadialGrid: ee,\n      enableCircularGrid: ae,\n      angleScale: or,\n      radiusScale: ir,\n      startAngle: Ye,\n      endAngle: Ze\n    }), ie && a(A, S({\n      type: \"start\",\n      center: _e,\n      angle: Math.min(Ye, Ze),\n      scale: ir\n    }, ie)), te && a(A, S({\n      type: \"end\",\n      center: _e,\n      angle: Math.max(Ye, Ze),\n      scale: ir\n    }, te)), de && a(R, S({\n      type: \"inner\",\n      center: _e,\n      radius: er,\n      startAngle: Ye,\n      endAngle: Ze,\n      scale: or\n    }, de)), ue && a(R, S({\n      type: \"outer\",\n      center: _e,\n      radius: rr,\n      startAngle: Ye,\n      endAngle: Ze,\n      scale: or\n    }, ue))]\n  }, \"grid\")), U.includes(\"tracks\") && Y && (sr.tracks = a(E, {\n    center: _e,\n    tracks: tr,\n    arcGenerator: nr,\n    transitionMode: je\n  }, \"tracks\")), U.includes(\"bars\") && (sr.bars = a(V, {\n    center: _e,\n    bars: ar,\n    borderWidth: pe,\n    borderColor: be,\n    arcGenerator: nr,\n    isInteractive: Se,\n    tooltip: Le,\n    onClick: Ve,\n    onMouseEnter: Ee,\n    onMouseMove: Oe,\n    onMouseLeave: we,\n    transitionMode: je\n  }, \"bars\")), U.includes(\"labels\") && he && (sr.labels = a(b, {\n    center: _e,\n    data: ar,\n    label: Re,\n    radiusOffset: ke,\n    skipAngle: Me,\n    textColor: Ie,\n    transitionMode: je\n  }, \"labels\")), U.includes(\"legends\") && De.length > 0 && (sr.legends = a(l, {\n    children: De.map(function (e, r) {\n      return a(m, S({}, e, {\n        containerWidth: Ke,\n        containerHeight: Ne,\n        data: lr\n      }), r);\n    })\n  }, \"legends\")), a(v, {\n    width: Qe,\n    height: Ue,\n    margin: Je,\n    role: Fe,\n    ariaLabel: He,\n    ariaLabelledBy: Pe,\n    ariaDescribedBy: qe,\n    children: U.map(function (e, r) {\n      var n;\n      return \"function\" == typeof e ? a(l, {\n        children: t(e, dr)\n      }, r) : null != (n = null == sr ? void 0 : sr[e]) ? n : null;\n    })\n  });\n},\n    T = function (e) {\n  var r = e.isInteractive,\n      n = void 0 === r ? L.isInteractive : r,\n      i = e.animate,\n      o = void 0 === i ? L.animate : i,\n      t = e.motionConfig,\n      l = void 0 === t ? L.motionConfig : t,\n      d = e.theme,\n      s = e.renderWrapper,\n      c = function (e, r) {\n    if (null == e) return {};\n    var a,\n        n,\n        i = {},\n        o = Object.keys(e);\n\n    for (n = 0; n < o.length; n++) a = o[n], r.indexOf(a) >= 0 || (i[a] = e[a]);\n\n    return i;\n  }(e, O);\n\n  return a(u, {\n    animate: o,\n    isInteractive: n,\n    motionConfig: l,\n    renderWrapper: s,\n    theme: d,\n    children: a(w, S({\n      isInteractive: n\n    }, c))\n  });\n},\n    j = function (e) {\n  return a(p, {\n    children: function (r) {\n      var n = r.width,\n          i = r.height;\n      return a(T, S({\n        width: n,\n        height: i\n      }, e));\n    }\n  });\n};\n\nexport { T as RadialBar, j as ResponsiveRadialBar, W as commonDefaultProps, L as svgDefaultProps };","map":{"version":3,"mappings":"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","names":["commonDefaultProps","maxValue","layers","startAngle","endAngle","innerRadius","padding","padAngle","cornerRadius","enableTracks","tracksColor","enableRadialGrid","enableCircularGrid","radialAxisStart","radialAxisEnd","circularAxisInner","circularAxisOuter","colors","scheme","borderWidth","borderColor","from","modifiers","enableLabels","label","labelsSkipAngle","labelsRadiusOffset","labelsTextColor","theme","isInteractive","tooltip","bar","_jsx","BasicTooltip","enableChip","id","_jsxs","category","groupId","value","formattedValue","color","legends","animate","motionConfig","transitionMode","renderWrapper","svgDefaultProps","RadialBarArcs","center","bars","arcGenerator","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","event","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","ArcsLayer","data","undefined","RadialBarTracks","tracks","InnerRadialBar","valueFormat","originalStartAngle","originalEndAngle","innerRadiusRatio","width","height","partialMargin","margin","role","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","clampArc","maxValueDirective","useMemo","outerRadius","Math","min","getColor","useOrdinalColorScale","F","result","serieIds","categories","groups","forEach","push","serie","groupTotalValue","includes","datum","x","y","total","max","map","group","valueScale","castLinearScale","scaleLinear","domain","range","radiusScale","castBandScale","scaleBand","d3Arc","d","degreesToRadians","formatValue","useValueFormatter","innerBars","currentValue","arcInnerRadius","arcOuterRadius","bandwidth","stackedValue","computedDatum","arc","startAngleRadians","endAngleRadians","getScaleTicks","trackRadius","legendData","barWithCategory","find","customLayerProps","useRadialBar","layerById","grid","labels","Fragment","PolarGrid","angleScale","RadialAxis","type","angle","scale","CircularAxis","radius","ArcLabelsLayer","radiusOffset","skipAngle","textColor","length","legend","i","BoxLegendSvg","containerWidth","containerHeight","SvgWrapper","layer","RadialBar","otherProps","Container","ResponsiveRadialBar","props","ResponsiveWrapper"],"sources":["C:\\Users\\yoshi\\OneDrive\\Desktop\\agoraphobicdash\\client\\node_modules\\@nivo\\radial-bar\\src\\RadialBarTooltip.tsx","C:\\Users\\yoshi\\OneDrive\\Desktop\\agoraphobicdash\\client\\node_modules\\@nivo\\radial-bar\\src\\props.ts","C:\\Users\\yoshi\\OneDrive\\Desktop\\agoraphobicdash\\client\\node_modules\\@nivo\\radial-bar\\src\\RadialBarArcs.tsx","C:\\Users\\yoshi\\OneDrive\\Desktop\\agoraphobicdash\\client\\node_modules\\@nivo\\radial-bar\\src\\RadialBarTracks.tsx","C:\\Users\\yoshi\\OneDrive\\Desktop\\agoraphobicdash\\client\\node_modules\\@nivo\\radial-bar\\src\\RadialBar.tsx","C:\\Users\\yoshi\\OneDrive\\Desktop\\agoraphobicdash\\client\\node_modules\\@nivo\\radial-bar\\src\\hooks.ts","C:\\Users\\yoshi\\OneDrive\\Desktop\\agoraphobicdash\\client\\node_modules\\@nivo\\radial-bar\\src\\ResponsiveRadialBar.tsx"],"sourcesContent":["import { BasicTooltip } from '@nivo/tooltip'\nimport { RadialBarDatum, RadialBarTooltipProps } from './types'\n\nexport const RadialBarTooltip = <D extends RadialBarDatum>({ bar }: RadialBarTooltipProps<D>) => {\n    return (\n        <BasicTooltip\n            enableChip\n            id={\n                <span>\n                    {bar.category} - {bar.groupId}\n                </span>\n            }\n            value={bar.formattedValue}\n            color={bar.color}\n        />\n    )\n}\n","import { InheritedColorConfig } from '@nivo/colors'\nimport { ComputedBar, RadialBarLayerId } from './types'\nimport { RadialBarTooltip } from './RadialBarTooltip'\n\nexport const commonDefaultProps = {\n    maxValue: 'auto' as const,\n\n    layers: ['grid', 'tracks', 'bars', 'labels', 'legends'] as RadialBarLayerId[],\n\n    startAngle: 0,\n    endAngle: 270,\n    innerRadius: 0.3,\n    padding: 0.2,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    enableTracks: true,\n    tracksColor: 'rgba(0, 0, 0, .15)',\n\n    enableRadialGrid: true,\n    enableCircularGrid: true,\n    radialAxisStart: {},\n    radialAxisEnd: null,\n    circularAxisInner: null,\n    circularAxisOuter: {},\n\n    colors: { scheme: 'nivo' as const },\n    borderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 1]] } as InheritedColorConfig<ComputedBar>,\n\n    enableLabels: false,\n    label: 'formattedValue',\n    labelsSkipAngle: 10,\n    labelsRadiusOffset: 0.5,\n    labelsTextColor: { theme: 'labels.text.fill' },\n\n    isInteractive: true,\n    tooltip: RadialBarTooltip,\n\n    legends: [],\n\n    animate: true,\n    motionConfig: 'gentle' as const,\n    transitionMode: 'centerRadius' as const,\n\n    renderWrapper: true,\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n}\n","import { createElement, MouseEvent, useCallback } from 'react'\nimport { ArcsLayer, ArcGenerator } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedBar, RadialBarCommonProps, RadialBarDatum } from './types'\n\ninterface RadialBarArcsProps<D extends RadialBarDatum> {\n    center: [number, number]\n    bars: ComputedBar<D>[]\n    borderWidth: RadialBarCommonProps<D>['borderWidth']\n    borderColor: RadialBarCommonProps<D>['borderColor']\n    arcGenerator: ArcGenerator\n    isInteractive: RadialBarCommonProps<D>['isInteractive']\n    tooltip: RadialBarCommonProps<D>['tooltip']\n    onClick?: RadialBarCommonProps<D>['onClick']\n    onMouseEnter?: RadialBarCommonProps<D>['onMouseEnter']\n    onMouseMove?: RadialBarCommonProps<D>['onMouseMove']\n    onMouseLeave?: RadialBarCommonProps<D>['onMouseLeave']\n    transitionMode: RadialBarCommonProps<D>['transitionMode']\n}\n\nexport const RadialBarArcs = <D extends RadialBarDatum>({\n    center,\n    bars,\n    borderWidth,\n    borderColor,\n    arcGenerator,\n    isInteractive,\n    tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n}: RadialBarArcsProps<D>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useCallback(\n        (bar: ComputedBar<D>, event: MouseEvent) => {\n            onClick?.(bar, event)\n        },\n        [onClick]\n    )\n\n    const handleMouseEnter = useCallback(\n        (bar: ComputedBar<D>, event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, { bar }), event)\n            onMouseEnter?.(bar, event)\n        },\n        [showTooltipFromEvent, tooltip, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (bar: ComputedBar<D>, event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, { bar }), event)\n            onMouseMove?.(bar, event)\n        },\n        [showTooltipFromEvent, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (bar: ComputedBar<D>, event: MouseEvent) => {\n            hideTooltip()\n            onMouseLeave?.(bar, event)\n        },\n        [hideTooltip, onMouseLeave]\n    )\n\n    return (\n        <ArcsLayer<ComputedBar<D>>\n            center={center}\n            data={bars}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={isInteractive ? handleClick : undefined}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { ArcGenerator, ArcsLayer, ArcTransitionMode } from '@nivo/arcs'\nimport { RadialBarTrackDatum } from './types'\n\ninterface RadialBarTracksProps {\n    center: [number, number]\n    tracks: RadialBarTrackDatum[]\n    arcGenerator: ArcGenerator\n    transitionMode: ArcTransitionMode\n}\n\nexport const RadialBarTracks = ({\n    center,\n    tracks,\n    arcGenerator,\n    transitionMode,\n}: RadialBarTracksProps) => {\n    return (\n        <ArcsLayer<RadialBarTrackDatum>\n            center={center}\n            data={tracks}\n            arcGenerator={arcGenerator}\n            borderWidth={0}\n            borderColor=\"none\"\n            transitionMode={transitionMode}\n        />\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, useDimensions, SvgWrapper, clampArc } from '@nivo/core'\nimport { ArcLabelsLayer } from '@nivo/arcs'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { PolarGrid, RadialAxis, CircularAxis } from '@nivo/polar-axes'\nimport { RadialBarLayerId, RadialBarSvgProps, ComputedBar, RadialBarDatum } from './types'\nimport { svgDefaultProps } from './props'\nimport { useRadialBar } from './hooks'\nimport { RadialBarArcs } from './RadialBarArcs'\nimport { RadialBarTracks } from './RadialBarTracks'\n\ntype InnerRadialBarProps<D extends RadialBarDatum = RadialBarDatum> = Omit<\n    RadialBarSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerRadialBar = <D extends RadialBarDatum>({\n    data,\n    maxValue = svgDefaultProps.maxValue,\n    valueFormat,\n    startAngle: originalStartAngle = svgDefaultProps.startAngle,\n    endAngle: originalEndAngle = svgDefaultProps.endAngle,\n    innerRadius: innerRadiusRatio = svgDefaultProps.innerRadius,\n    padding = svgDefaultProps.padding,\n    padAngle = svgDefaultProps.padAngle,\n    cornerRadius = svgDefaultProps.cornerRadius,\n    width,\n    height,\n    margin: partialMargin,\n    layers = svgDefaultProps.layers,\n    enableTracks = svgDefaultProps.enableTracks,\n    tracksColor = svgDefaultProps.tracksColor,\n    enableRadialGrid = svgDefaultProps.enableRadialGrid,\n    enableCircularGrid = svgDefaultProps.enableCircularGrid,\n    radialAxisStart = svgDefaultProps.radialAxisStart,\n    radialAxisEnd = svgDefaultProps.radialAxisEnd,\n    circularAxisInner = svgDefaultProps.circularAxisInner,\n    circularAxisOuter = svgDefaultProps.circularAxisOuter,\n    colors = svgDefaultProps.colors,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n    enableLabels = svgDefaultProps.enableLabels,\n    label = svgDefaultProps.label,\n    labelsSkipAngle = svgDefaultProps.labelsSkipAngle,\n    labelsRadiusOffset = svgDefaultProps.labelsRadiusOffset,\n    labelsTextColor = svgDefaultProps.labelsTextColor,\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode = svgDefaultProps.transitionMode,\n    legends = svgDefaultProps.legends,\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerRadialBarProps<D>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [startAngle, endAngle] = clampArc(originalStartAngle, originalEndAngle)\n\n    const {\n        center,\n        innerRadius,\n        outerRadius,\n        bars,\n        arcGenerator,\n        radiusScale,\n        valueScale,\n        tracks,\n        legendData,\n        customLayerProps,\n    } = useRadialBar<D>({\n        data,\n        maxValue,\n        valueFormat,\n        startAngle,\n        endAngle,\n        innerRadiusRatio,\n        padding,\n        padAngle,\n        cornerRadius,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        tracksColor,\n    })\n\n    const layerById: Record<RadialBarLayerId, ReactNode> = {\n        grid: null,\n        tracks: null,\n        bars: null,\n        labels: null,\n        legends: null,\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Fragment key=\"grid\">\n                <PolarGrid\n                    center={center}\n                    enableRadialGrid={enableRadialGrid}\n                    enableCircularGrid={enableCircularGrid}\n                    angleScale={valueScale}\n                    radiusScale={radiusScale}\n                    startAngle={startAngle}\n                    endAngle={endAngle}\n                />\n                {radialAxisStart && (\n                    <RadialAxis\n                        type=\"start\"\n                        center={center}\n                        angle={Math.min(startAngle, endAngle)}\n                        scale={radiusScale}\n                        {...radialAxisStart}\n                    />\n                )}\n                {radialAxisEnd && (\n                    <RadialAxis\n                        type=\"end\"\n                        center={center}\n                        angle={Math.max(startAngle, endAngle)}\n                        scale={radiusScale}\n                        {...radialAxisEnd}\n                    />\n                )}\n                {circularAxisInner && (\n                    <CircularAxis\n                        type=\"inner\"\n                        center={center}\n                        radius={innerRadius}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        scale={valueScale}\n                        {...circularAxisInner}\n                    />\n                )}\n                {circularAxisOuter && (\n                    <CircularAxis\n                        type=\"outer\"\n                        center={center}\n                        radius={outerRadius}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        scale={valueScale}\n                        {...circularAxisOuter}\n                    />\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('tracks') && enableTracks) {\n        layerById.tracks = (\n            <RadialBarTracks\n                key=\"tracks\"\n                center={center}\n                tracks={tracks}\n                arcGenerator={arcGenerator}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <RadialBarArcs<D>\n                key=\"bars\"\n                center={center}\n                bars={bars}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                arcGenerator={arcGenerator}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (layers.includes('labels') && enableLabels) {\n        layerById.labels = (\n            <ArcLabelsLayer<ComputedBar<D>>\n                key=\"labels\"\n                center={center}\n                data={bars}\n                label={label}\n                radiusOffset={labelsRadiusOffset}\n                skipAngle={labelsSkipAngle}\n                textColor={labelsTextColor}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (layers.includes('legends') && legends.length > 0) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const RadialBar = <D extends RadialBarDatum = RadialBarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: RadialBarSvgProps<D>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerRadialBar<D> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { scaleBand, scaleLinear } from 'd3-scale'\nimport { arc as d3Arc } from 'd3-shape'\nimport { degreesToRadians, useValueFormatter } from '@nivo/core'\nimport { Arc } from '@nivo/arcs'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { castLinearScale, castBandScale, getScaleTicks } from '@nivo/scales'\nimport { commonDefaultProps, svgDefaultProps } from './props'\nimport {\n    ComputedBar,\n    RadialBarCommonProps,\n    RadialBarDataProps,\n    RadialBarCustomLayerProps,\n    RadialBarTrackDatum,\n    RadialBarDatum,\n} from './types'\n\ninterface RadialBarGroup<D extends RadialBarDatum> {\n    id: string\n    total: number\n    data: D[]\n}\n\nexport const useRadialBar = <D extends RadialBarDatum = RadialBarDatum>({\n    data,\n    maxValue: maxValueDirective = svgDefaultProps.maxValue,\n    valueFormat,\n    startAngle = commonDefaultProps.startAngle,\n    endAngle = commonDefaultProps.endAngle,\n    innerRadiusRatio = commonDefaultProps.innerRadius,\n    padding = commonDefaultProps.padding,\n    padAngle = commonDefaultProps.padAngle,\n    cornerRadius = commonDefaultProps.cornerRadius,\n    width,\n    height,\n    colors = commonDefaultProps.colors,\n    tracksColor = commonDefaultProps.tracksColor,\n}: {\n    data: RadialBarDataProps<D>['data']\n    maxValue: RadialBarCommonProps<D>['maxValue']\n    valueFormat?: RadialBarCommonProps<D>['valueFormat']\n    startAngle: RadialBarCommonProps<D>['startAngle']\n    innerRadiusRatio: RadialBarCommonProps<D>['innerRadius']\n    padding: RadialBarCommonProps<D>['padding']\n    padAngle: RadialBarCommonProps<D>['padAngle']\n    cornerRadius: RadialBarCommonProps<D>['cornerRadius']\n    endAngle: RadialBarCommonProps<D>['endAngle']\n    width: number\n    height: number\n    colors: RadialBarCommonProps<D>['colors']\n    tracksColor: RadialBarCommonProps<D>['tracksColor']\n}) => {\n    // using a hook, not because it's costly to compute, but because this is used as\n    // a dependency for other hooks, and otherwise a new array would be created all\n    // the time, forcing recomputing everything.\n    const center: [number, number] = useMemo(() => [width / 2, height / 2], [width, height])\n    const outerRadius = Math.min(...center)\n    const innerRadius = outerRadius * Math.min(innerRadiusRatio, 1)\n\n    const getColor = useOrdinalColorScale<ComputedBar<D>>(colors, 'category')\n\n    // the way categories are being extracted is a bit fragile, because it's extracted from the data,\n    // so if the first group doesn't contain the first expected category for example, then the order\n    // of categories is going to be incorrect.\n    // Maybe we could add an extra sort property, although this might be confusing.\n    const { serieIds, categories, groups, maxValue } = useMemo(() => {\n        const result: {\n            serieIds: string[]\n            categories: string[]\n            groups: RadialBarGroup<D>[]\n            maxValue: number\n        } = {\n            serieIds: [],\n            categories: [],\n            groups: [],\n            maxValue: 0,\n        }\n\n        data.forEach(serie => {\n            result.serieIds.push(serie.id)\n\n            let groupTotalValue = 0\n            serie.data.forEach(datum => {\n                if (!result.categories.includes(datum.x)) {\n                    result.categories.push(datum.x)\n                }\n                groupTotalValue += datum.y\n            })\n\n            result.groups.push({\n                id: serie.id,\n                total: groupTotalValue,\n                data: serie.data,\n            })\n        })\n\n        if (maxValueDirective === 'auto') {\n            result.maxValue = Math.max(...result.groups.map(group => group.total))\n        } else {\n            result.maxValue = maxValueDirective\n        }\n\n        return result\n    }, [data, maxValueDirective])\n\n    const valueScale = useMemo(\n        () =>\n            castLinearScale<number, number>(\n                scaleLinear<number, number>().domain([0, maxValue]).range([startAngle, endAngle])\n            ),\n        [maxValue, startAngle, endAngle]\n    )\n\n    const radiusScale = useMemo(\n        () =>\n            castBandScale<string>(\n                scaleBand<string>()\n                    .domain(serieIds)\n                    .range([innerRadius, outerRadius])\n                    .padding(padding)\n            ),\n        [serieIds, outerRadius, innerRadius, padding]\n    )\n\n    const arcGenerator = useMemo(\n        () =>\n            d3Arc<Arc>()\n                .startAngle(d => d.startAngle)\n                .endAngle(d => d.endAngle)\n                .innerRadius(d => d.innerRadius)\n                .outerRadius(d => d.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(degreesToRadians(padAngle)),\n        [cornerRadius, padAngle]\n    )\n\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const bars = useMemo(() => {\n        const innerBars: ComputedBar<D>[] = []\n\n        groups.forEach(group => {\n            let currentValue = 0\n            const arcInnerRadius = radiusScale(group.id) as number\n            const arcOuterRadius = arcInnerRadius + radiusScale.bandwidth()\n\n            group.data.forEach(datum => {\n                const stackedValue = currentValue + datum.y\n\n                const computedDatum: ComputedBar<D> = {\n                    id: `${group.id}.${datum.x}`,\n                    data: datum,\n                    groupId: group.id,\n                    category: datum.x,\n                    value: datum.y,\n                    formattedValue: formatValue(datum.y),\n                    color: '',\n                    stackedValue,\n                    arc: {\n                        startAngle: degreesToRadians(valueScale(currentValue)),\n                        endAngle: degreesToRadians(valueScale(stackedValue)),\n                        innerRadius: arcInnerRadius,\n                        outerRadius: arcOuterRadius,\n                    },\n                }\n\n                computedDatum.color = getColor(computedDatum)\n\n                currentValue += datum.y\n\n                innerBars.push(computedDatum)\n            })\n        })\n\n        return innerBars\n    }, [groups, radiusScale, valueScale, getColor, formatValue])\n\n    const startAngleRadians = degreesToRadians(startAngle)\n    const endAngleRadians = degreesToRadians(endAngle)\n\n    const tracks: RadialBarTrackDatum[] = useMemo(() => {\n        return getScaleTicks(radiusScale).map(value => {\n            const trackRadius = radiusScale(value) as number\n\n            return {\n                id: value,\n                color: tracksColor,\n                arc: {\n                    startAngle: startAngleRadians,\n                    endAngle: endAngleRadians,\n                    innerRadius: trackRadius,\n                    outerRadius: trackRadius + radiusScale.bandwidth(),\n                },\n            }\n        })\n    }, [radiusScale, startAngleRadians, endAngleRadians, tracksColor])\n\n    // Given the way categories are extracted, (please see the corresponding hook above),\n    // legends order might be incorrect, also colors are extracted from bars, to avoid\n    // duplicating the colors function, but if the color logic is custom for each bar,\n    // this might lead to weird values for legends.\n    // Maybe we could allow passing custom legend data to fix that.\n    const legendData = useMemo(\n        () =>\n            categories.map(category => {\n                const barWithCategory = bars.find(bar => bar.category === category)\n                const color = barWithCategory ? barWithCategory.color : undefined\n\n                return {\n                    id: category,\n                    label: category,\n                    color,\n                }\n            }),\n        [categories, bars]\n    )\n\n    const customLayerProps: RadialBarCustomLayerProps<D> = useMemo(\n        () => ({\n            center,\n            outerRadius,\n            innerRadius,\n            bars,\n            arcGenerator,\n            radiusScale,\n            valueScale,\n        }),\n        [center, outerRadius, innerRadius, bars, arcGenerator, radiusScale, valueScale]\n    )\n\n    return {\n        center,\n        outerRadius,\n        innerRadius,\n        bars,\n        arcGenerator,\n        radiusScale,\n        valueScale,\n        tracks,\n        legendData,\n        customLayerProps,\n    }\n}\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { RadialBarDatum, RadialBarSvgProps } from './types'\nimport { RadialBar } from './RadialBar'\n\nexport const ResponsiveRadialBar = <D extends RadialBarDatum = RadialBarDatum>(\n    props: Omit<RadialBarSvgProps<D>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <RadialBar<D> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"]},"metadata":{},"sourceType":"module"}